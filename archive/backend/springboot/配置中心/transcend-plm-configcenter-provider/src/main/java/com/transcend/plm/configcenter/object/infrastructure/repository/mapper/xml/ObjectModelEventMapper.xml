<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transcend.plm.configcenter.object.infrastructure.repository.mapper.ObjectModelEventMapper">
  <resultMap id="BaseResultMap" type="com.transcend.plm.configcenter.object.infrastructure.po.ModelEventPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bid" jdbcType="VARCHAR" property="bid" />
    <result column="event_id" jdbcType="VARCHAR" property="eventId" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="enable_flag" jdbcType="VARCHAR" property="enableFlag" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId"/>
    <result column="delete_flag" jdbcType="VARCHAR" property="deleteFlag"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, bid, event_id, event_name, description, enable_flag, created_time, updated_time,
    created_by, updated_by, app_id, company_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from model_event
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from model_event
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.transcend.plm.configcenter.object.infrastructure.po.ModelEventPO" useGeneratedKeys="true">
    insert into model_event (bid, event_id, event_name,
      description, enable_flag, created_time,
      updated_time, created_by, updated_by,
      app_id, company_id)
    values (#{bid,jdbcType=VARCHAR}, #{eventId,jdbcType=VARCHAR}, #{eventName,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{enableFlag,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP},
      #{updatedTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.transcend.plm.configcenter.object.infrastructure.po.ModelEventPO" useGeneratedKeys="true">
    insert into model_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        bid,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="eventName != null">
        event_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="enableFlag != null">
        enable_flag,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        #{bid,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="enableFlag != null">
        #{enableFlag,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.transcend.plm.configcenter.object.infrastructure.po.ModelEventPO">
    update model_event
    <set>
      <if test="bid != null">
        bid = #{bid,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="enableFlag != null">
        enable_flag = #{enableFlag,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transcend.plm.configcenter.object.infrastructure.po.ModelEventPO">
    update model_event
    set bid = #{bid,jdbcType=VARCHAR},
      event_id = #{eventId,jdbcType=VARCHAR},
      event_name = #{eventName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      enable_flag = #{enableFlag,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="query" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from model_event
    where 1=1
    <if test="qo.enableFlag!=null and qo.enableFlag!=''">
      AND enable_flag = #{qo.enableFlag}
    </if>
    <if test="qo.eventName!=null and qo.eventName!=''">
      AND event_name LIKE concat(concat('%',#{qo.eventName,jdbcType=VARCHAR}),'%')
    </if>
    <if test="qo.description!=null and qo.description!=''">
      AND description = #{qo.description}
    </if>
    order by updated_time desc
  </select>
  <insert id="bulkInsert">
    insert into model_event (
    bid,
    event_id,
    event_name,
    description,
    enable_flag,
    created_time,
    updated_time,
    created_by,
    updated_by,
    app_id,
    company_id
    )
    values
    <foreach collection="records" separator="," item="domain">
      (
      #{domain.bid,jdbcType=VARCHAR},
      #{domain.eventId,jdbcType=VARCHAR},
      #{domain.eventName,jdbcType=VARCHAR},
      #{domain.description,jdbcType=VARCHAR},
      #{domain.enableFlag,jdbcType=VARCHAR},
      #{domain.createdTime,jdbcType=TIMESTAMP},
      #{domain.updatedTime,jdbcType=TIMESTAMP},
      #{domain.createdBy,jdbcType=VARCHAR},
      #{domain.updatedBy,jdbcType=VARCHAR},
      #{domain.appId,jdbcType=VARCHAR},
      #{domain.companyId,jdbcType=INTEGER},
      )
    </foreach>
  </insert>
</mapper>
