version: '3.8'

services:
  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: qms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - qms-network

  # 配置中心服务
  config-service:
    build:
      context: ./backend/nodejs
      dockerfile: Dockerfile.config
    container_name: qms-config-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - CONFIG_SERVICE_PORT=3003
    depends_on:
      - redis
    networks:
      - qms-network

  # 聊天服务
  chat-service:
    build:
      context: ./backend/nodejs
      dockerfile: Dockerfile.chat
    container_name: qms-chat-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - CONFIG_SERVICE_URL=http://config-service:3003
    depends_on:
      - redis
      - config-service
    networks:
      - qms-network

  # 认证服务
  auth-service:
    build:
      context: ./backend/nodejs
      dockerfile: Dockerfile.auth
    container_name: qms-auth-service
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - qms-network

  # API网关
  api-gateway:
    build:
      context: ./backend/nodejs
      dockerfile: Dockerfile.gateway
    container_name: qms-api-gateway
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - NODE_ENV=production
      - CONFIG_SERVICE_URL=http://config-service:3003
      - CHAT_SERVICE_URL=http://chat-service:3004
      - AUTH_SERVICE_URL=http://auth-service:8084
    depends_on:
      - config-service
      - chat-service
      - auth-service
    networks:
      - qms-network

  # 前端应用端
  frontend-app:
    build:
      context: ./frontend/应用端
      dockerfile: Dockerfile
    container_name: qms-frontend-app
    restart: unless-stopped
    ports:
      - "8081:80"
    networks:
      - qms-network

  # 前端配置端
  frontend-config:
    build:
      context: ./frontend/配置端
      dockerfile: Dockerfile
    container_name: qms-frontend-config
    restart: unless-stopped
    ports:
      - "8072:80"
    networks:
      - qms-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: qms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend-app
      - frontend-config
      - api-gateway
    networks:
      - qms-network

volumes:
  redis_data:

networks:
  qms-network:
    driver: bridge
